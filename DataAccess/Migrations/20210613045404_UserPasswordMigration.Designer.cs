// <auto-generated />
using System;
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccess.Migrations
{
    [DbContext(typeof(CetiContext))]
    [Migration("20210613045404_UserPasswordMigration")]
    partial class UserPasswordMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entities.AcademiaEntity", b =>
                {
                    b.Property<int>("AcademiaId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(11)
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AcademiaNombre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("AcademiaId");

                    b.ToTable("Academias");

                    b.HasData(
                        new
                        {
                            AcademiaId = 1,
                            AcademiaNombre = "Computacion"
                        },
                        new
                        {
                            AcademiaId = 2,
                            AcademiaNombre = "Redes y sistemas"
                        },
                        new
                        {
                            AcademiaId = 3,
                            AcademiaNombre = "Informatica"
                        });
                });

            modelBuilder.Entity("Entities.DireccionEntity", b =>
                {
                    b.Property<int>("DireccionId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(11)
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DireccionCalle")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("DireccionCp")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("DireccionMunicipio")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("DireccionNoExt")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("DireccionNoInt")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("DireccionId");

                    b.ToTable("DireccionEntity");

                    b.HasData(
                        new
                        {
                            DireccionId = 1,
                            DireccionCalle = "Calle Nueva Escocia",
                            DireccionCp = "44630",
                            DireccionMunicipio = "Guadalajara",
                            DireccionNoExt = "1885",
                            DireccionNoInt = ""
                        },
                        new
                        {
                            DireccionId = 2,
                            DireccionCalle = "Camino a Matatlan",
                            DireccionCp = "45435",
                            DireccionMunicipio = "Tonala",
                            DireccionNoExt = "2400",
                            DireccionNoInt = ""
                        },
                        new
                        {
                            DireccionId = 3,
                            DireccionCalle = "Loma Dorada Norte",
                            DireccionCp = "45418",
                            DireccionMunicipio = "Tonala",
                            DireccionNoExt = "8962",
                            DireccionNoInt = ""
                        },
                        new
                        {
                            DireccionId = 4,
                            DireccionCalle = "Salto del Agua",
                            DireccionCp = "44210",
                            DireccionMunicipio = "Gualadajara",
                            DireccionNoExt = "2415",
                            DireccionNoInt = ""
                        },
                        new
                        {
                            DireccionId = 5,
                            DireccionCalle = "Santa Elena Alcalde",
                            DireccionCp = "44220",
                            DireccionMunicipio = "Gualadajara",
                            DireccionNoExt = "56",
                            DireccionNoInt = ""
                        },
                        new
                        {
                            DireccionId = 6,
                            DireccionCalle = "Domingo de Alzola",
                            DireccionCp = "44220",
                            DireccionMunicipio = "Gualadajara",
                            DireccionNoExt = "1134",
                            DireccionNoInt = ""
                        },
                        new
                        {
                            DireccionId = 7,
                            DireccionCalle = "Avenida Alcalde",
                            DireccionCp = "45190",
                            DireccionMunicipio = "Zapopan",
                            DireccionNoExt = "2510",
                            DireccionNoInt = "6"
                        },
                        new
                        {
                            DireccionId = 8,
                            DireccionCalle = "Calle Nicolas Romero",
                            DireccionCp = "44260",
                            DireccionMunicipio = "Gualadajara",
                            DireccionNoExt = "1328A",
                            DireccionNoInt = ""
                        },
                        new
                        {
                            DireccionId = 9,
                            DireccionCalle = "Calle Montreal",
                            DireccionCp = "44630",
                            DireccionMunicipio = "Gualadajara",
                            DireccionNoExt = "1587",
                            DireccionNoInt = ""
                        },
                        new
                        {
                            DireccionId = 10,
                            DireccionCalle = "Valparaiso",
                            DireccionCp = "44630",
                            DireccionMunicipio = "Gualadajara",
                            DireccionNoExt = "2579",
                            DireccionNoInt = ""
                        },
                        new
                        {
                            DireccionId = 11,
                            DireccionCalle = "Milan",
                            DireccionCp = "44630",
                            DireccionMunicipio = "Gualadajara",
                            DireccionNoExt = "2654",
                            DireccionNoInt = ""
                        },
                        new
                        {
                            DireccionId = 12,
                            DireccionCalle = "Calle Jose Enrique Rodo",
                            DireccionCp = "44670",
                            DireccionMunicipio = "Gualadajara",
                            DireccionNoExt = "2783",
                            DireccionNoInt = ""
                        },
                        new
                        {
                            DireccionId = 13,
                            DireccionCalle = "Domingo Sarmiento",
                            DireccionCp = "44670",
                            DireccionMunicipio = "Gualadajara",
                            DireccionNoExt = "2922",
                            DireccionNoInt = ""
                        },
                        new
                        {
                            DireccionId = 14,
                            DireccionCalle = "Av Mayas",
                            DireccionCp = "44670",
                            DireccionMunicipio = "Gualadajara",
                            DireccionNoExt = "3322",
                            DireccionNoInt = ""
                        },
                        new
                        {
                            DireccionId = 15,
                            DireccionCalle = "Kabah",
                            DireccionCp = "45050",
                            DireccionMunicipio = "Zapopan",
                            DireccionNoExt = "1475",
                            DireccionNoInt = ""
                        },
                        new
                        {
                            DireccionId = 16,
                            DireccionCalle = "Av Moctezuma",
                            DireccionCp = "45050",
                            DireccionMunicipio = "Zapopan",
                            DireccionNoExt = "348",
                            DireccionNoInt = ""
                        },
                        new
                        {
                            DireccionId = 17,
                            DireccionCalle = "Economos",
                            DireccionCp = "45037",
                            DireccionMunicipio = "Zapopan",
                            DireccionNoExt = "5524",
                            DireccionNoInt = ""
                        },
                        new
                        {
                            DireccionId = 18,
                            DireccionCalle = "Agustin Lara",
                            DireccionCp = "45037",
                            DireccionMunicipio = "Zapopan",
                            DireccionNoExt = "5774",
                            DireccionNoInt = ""
                        },
                        new
                        {
                            DireccionId = 19,
                            DireccionCalle = "Felix Mendelssohn",
                            DireccionCp = "45030",
                            DireccionMunicipio = "Zapopan",
                            DireccionNoExt = "5682",
                            DireccionNoInt = ""
                        });
                });

            modelBuilder.Entity("Entities.JefeEntity", b =>
                {
                    b.Property<int>("JefeId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(11)
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AcademiaId")
                        .HasMaxLength(11)
                        .HasColumnType("int");

                    b.Property<string>("TrabajadorId")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("JefeId");

                    b.HasIndex("AcademiaId");

                    b.HasIndex("TrabajadorId");

                    b.ToTable("Jefes");

                    b.HasData(
                        new
                        {
                            JefeId = 1,
                            AcademiaId = 1,
                            TrabajadorId = "836"
                        },
                        new
                        {
                            JefeId = 2,
                            AcademiaId = 2,
                            TrabajadorId = "728"
                        },
                        new
                        {
                            JefeId = 3,
                            AcademiaId = 3,
                            TrabajadorId = "500"
                        });
                });

            modelBuilder.Entity("Entities.PermisoEntity", b =>
                {
                    b.Property<int>("PermisoId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(11)
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("JefeInmediatoId")
                        .HasMaxLength(11)
                        .HasColumnType("int");

                    b.Property<string>("PermisoEstado")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("PermisoFechaAplicacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PermisoFechaElaboracion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PermisoFechaFinalizacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("PermisoMotivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PermisoTipo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("TrabajadorId")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("PermisoId");

                    b.HasIndex("JefeInmediatoId");

                    b.HasIndex("TrabajadorId");

                    b.ToTable("Permisos");
                });

            modelBuilder.Entity("Entities.PlantelEntity", b =>
                {
                    b.Property<int>("PlantelId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(11)
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DireccionId")
                        .HasMaxLength(11)
                        .HasColumnType("int");

                    b.Property<string>("PlantelNombre")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("PlantelId");

                    b.HasIndex("DireccionId");

                    b.ToTable("Planteles");

                    b.HasData(
                        new
                        {
                            PlantelId = 1,
                            DireccionId = 1,
                            PlantelNombre = "CETI Colomos"
                        },
                        new
                        {
                            PlantelId = 2,
                            DireccionId = 2,
                            PlantelNombre = "CETI Rio Santiago"
                        },
                        new
                        {
                            PlantelId = 3,
                            DireccionId = 3,
                            PlantelNombre = "CETI Tonala"
                        });
                });

            modelBuilder.Entity("Entities.PlazaEntity", b =>
                {
                    b.Property<int>("PlazaId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(11)
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PlazaTipo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PlazaId");

                    b.ToTable("Plazas");

                    b.HasData(
                        new
                        {
                            PlazaId = 1,
                            PlazaTipo = "fija"
                        },
                        new
                        {
                            PlazaId = 2,
                            PlazaTipo = "no fija"
                        });
                });

            modelBuilder.Entity("Entities.PuestoEntity", b =>
                {
                    b.Property<int>("PuestoId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(11)
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AcademiaId")
                        .HasMaxLength(11)
                        .HasColumnType("int");

                    b.Property<DateTime>("PlazaFechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("TrabajadorId")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("PuestoId");

                    b.HasIndex("AcademiaId");

                    b.HasIndex("TrabajadorId");

                    b.ToTable("Puestos");

                    b.HasData(
                        new
                        {
                            PuestoId = 1,
                            AcademiaId = 1,
                            PlazaFechaInicio = new DateTime(2000, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrabajadorId = "836"
                        },
                        new
                        {
                            PuestoId = 2,
                            AcademiaId = 1,
                            PlazaFechaInicio = new DateTime(2001, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrabajadorId = "520"
                        },
                        new
                        {
                            PuestoId = 3,
                            AcademiaId = 1,
                            PlazaFechaInicio = new DateTime(2002, 3, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrabajadorId = "969"
                        },
                        new
                        {
                            PuestoId = 4,
                            AcademiaId = 1,
                            PlazaFechaInicio = new DateTime(2003, 4, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrabajadorId = "662"
                        },
                        new
                        {
                            PuestoId = 5,
                            AcademiaId = 1,
                            PlazaFechaInicio = new DateTime(2004, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrabajadorId = "870"
                        },
                        new
                        {
                            PuestoId = 6,
                            AcademiaId = 2,
                            PlazaFechaInicio = new DateTime(2005, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrabajadorId = "142"
                        },
                        new
                        {
                            PuestoId = 7,
                            AcademiaId = 2,
                            PlazaFechaInicio = new DateTime(2006, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrabajadorId = "106"
                        },
                        new
                        {
                            PuestoId = 8,
                            AcademiaId = 2,
                            PlazaFechaInicio = new DateTime(2007, 2, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrabajadorId = "728"
                        },
                        new
                        {
                            PuestoId = 9,
                            AcademiaId = 2,
                            PlazaFechaInicio = new DateTime(2008, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrabajadorId = "861"
                        },
                        new
                        {
                            PuestoId = 10,
                            AcademiaId = 2,
                            PlazaFechaInicio = new DateTime(2009, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrabajadorId = "675"
                        },
                        new
                        {
                            PuestoId = 11,
                            AcademiaId = 3,
                            PlazaFechaInicio = new DateTime(2010, 5, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrabajadorId = "972"
                        },
                        new
                        {
                            PuestoId = 12,
                            AcademiaId = 3,
                            PlazaFechaInicio = new DateTime(2011, 6, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrabajadorId = "779"
                        },
                        new
                        {
                            PuestoId = 13,
                            AcademiaId = 3,
                            PlazaFechaInicio = new DateTime(2012, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrabajadorId = "656"
                        },
                        new
                        {
                            PuestoId = 14,
                            AcademiaId = 3,
                            PlazaFechaInicio = new DateTime(2013, 8, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrabajadorId = "991"
                        },
                        new
                        {
                            PuestoId = 15,
                            AcademiaId = 3,
                            PlazaFechaInicio = new DateTime(2014, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrabajadorId = "669"
                        },
                        new
                        {
                            PuestoId = 16,
                            AcademiaId = 3,
                            PlazaFechaInicio = new DateTime(2015, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrabajadorId = "500"
                        });
                });

            modelBuilder.Entity("Entities.TrabajadorEntity", b =>
                {
                    b.Property<string>("TrabajadorNomina")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<int>("DireccionId")
                        .HasMaxLength(11)
                        .HasColumnType("int");

                    b.Property<int>("PlantelId")
                        .HasMaxLength(11)
                        .HasColumnType("int");

                    b.Property<int>("PlazaId")
                        .HasMaxLength(11)
                        .HasColumnType("int");

                    b.Property<string>("TrabajadorApMaterno")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("TrabajadorApPaterno")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("TrabajadorCelular")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("TrabajadorCurp")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("TrabajadorEmail")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("TrabajadorFechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("TrabajadorNombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("TrabajadorRegistro")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TrabajadorTelefono")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("TrabajadorNomina");

                    b.HasIndex("DireccionId");

                    b.HasIndex("PlantelId");

                    b.HasIndex("PlazaId");

                    b.ToTable("Trabajadores");

                    b.HasData(
                        new
                        {
                            TrabajadorNomina = "836",
                            DireccionId = 4,
                            PlantelId = 1,
                            PlazaId = 1,
                            TrabajadorApMaterno = "GONZÁLEZ",
                            TrabajadorApPaterno = "GÓMEZ",
                            TrabajadorCelular = "3345678901",
                            TrabajadorCurp = "XEXX010101MNEXXXA8",
                            TrabajadorEmail = "zbins@mills.biz",
                            TrabajadorFechaNacimiento = new DateTime(1976, 3, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrabajadorNombre = "YESENIA",
                            TrabajadorRegistro = "6bb89359-2b97-44df-8ba6-b3fcac0718d4",
                            TrabajadorTelefono = "3318826414"
                        },
                        new
                        {
                            TrabajadorNomina = "520",
                            DireccionId = 5,
                            PlantelId = 1,
                            PlazaId = 1,
                            TrabajadorApMaterno = "LOZANO",
                            TrabajadorApPaterno = "ABRAHAM",
                            TrabajadorCelular = "3391176908",
                            TrabajadorCurp = "XEXX010101HNEXXXA4",
                            TrabajadorEmail = "mmoore@gmail.com",
                            TrabajadorFechaNacimiento = new DateTime(1982, 3, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrabajadorNombre = "AKIRA",
                            TrabajadorRegistro = "91ca69e7-4443-47ef-9b64-aa0be00b6d18",
                            TrabajadorTelefono = "3372586983"
                        },
                        new
                        {
                            TrabajadorNomina = "969",
                            DireccionId = 6,
                            PlantelId = 1,
                            PlazaId = 1,
                            TrabajadorApMaterno = "HERNÁNDEZ",
                            TrabajadorApPaterno = "FERRER",
                            TrabajadorCelular = "3332185477",
                            TrabajadorCurp = "XEXX010101MNEXXXA8",
                            TrabajadorEmail = "josiah.pacocha@gmail.com",
                            TrabajadorFechaNacimiento = new DateTime(1983, 3, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrabajadorNombre = "SUSANA ELIZABETH",
                            TrabajadorRegistro = "93037857-c53a-41ef-8fed-6dc9eb120959",
                            TrabajadorTelefono = "3319871231"
                        },
                        new
                        {
                            TrabajadorNomina = "662",
                            DireccionId = 7,
                            PlantelId = 1,
                            PlazaId = 1,
                            TrabajadorApMaterno = "HERNÁNDEZ",
                            TrabajadorApPaterno = "FERRER",
                            TrabajadorCelular = "3333244215",
                            TrabajadorCurp = "XEXX010101MNEXXXA8",
                            TrabajadorEmail = "stoltenberg.keshawn@yahoo.com",
                            TrabajadorFechaNacimiento = new DateTime(1984, 3, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrabajadorNombre = "SUSANA ELIZABETH",
                            TrabajadorRegistro = "bd69edc9-bff3-4202-af71-dd56da0d7efb",
                            TrabajadorTelefono = "3361564758"
                        },
                        new
                        {
                            TrabajadorNomina = "870",
                            DireccionId = 8,
                            PlantelId = 1,
                            PlazaId = 1,
                            TrabajadorApMaterno = "DAMIAN",
                            TrabajadorApPaterno = "GARCÍA",
                            TrabajadorCelular = "3390971710",
                            TrabajadorCurp = "XEXX010101HNEXXXA4",
                            TrabajadorEmail = "piper33@block.org",
                            TrabajadorFechaNacimiento = new DateTime(1985, 3, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrabajadorNombre = "JUAN MANUEL",
                            TrabajadorRegistro = "dfd0e158-ccc9-4be9-a98e-5ab5c31b341c",
                            TrabajadorTelefono = "3389908711"
                        },
                        new
                        {
                            TrabajadorNomina = "142",
                            DireccionId = 9,
                            PlantelId = 2,
                            PlazaId = 1,
                            TrabajadorApMaterno = "COLIN",
                            TrabajadorApPaterno = "SANTANA",
                            TrabajadorCelular = "3387144259",
                            TrabajadorCurp = "XEXX010101HNEXXXA4",
                            TrabajadorEmail = "pbalistreri@gmail.com",
                            TrabajadorFechaNacimiento = new DateTime(1986, 3, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrabajadorNombre = "CARLOS TOMAS",
                            TrabajadorRegistro = "7805017c-a5a5-4d1b-a98e-51d1809b4f35",
                            TrabajadorTelefono = "3312160223"
                        },
                        new
                        {
                            TrabajadorNomina = "106",
                            DireccionId = 10,
                            PlantelId = 2,
                            PlazaId = 1,
                            TrabajadorApMaterno = "OYARZABAL",
                            TrabajadorApPaterno = "PLAZA",
                            TrabajadorCelular = "3341024910",
                            TrabajadorCurp = "XEXX010101HNEXXXA4",
                            TrabajadorEmail = "benedict73@yahoo.com",
                            TrabajadorFechaNacimiento = new DateTime(1987, 3, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrabajadorNombre = "ERNESTO ALEJANDRO",
                            TrabajadorRegistro = "516b1639-29a7-44d6-9eb4-c74186d9b7eb",
                            TrabajadorTelefono = "3363713078"
                        },
                        new
                        {
                            TrabajadorNomina = "728",
                            DireccionId = 11,
                            PlantelId = 2,
                            PlazaId = 1,
                            TrabajadorApMaterno = "GÓMEZ",
                            TrabajadorApPaterno = "VARGAS",
                            TrabajadorCelular = "3347681797",
                            TrabajadorCurp = "XEXX010101MNEXXXA8",
                            TrabajadorEmail = "abigayle.mann@gmail.com",
                            TrabajadorFechaNacimiento = new DateTime(1988, 3, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrabajadorNombre = "AGUSTINA",
                            TrabajadorRegistro = "7a531531-d658-421f-aec5-afeec94d59bc",
                            TrabajadorTelefono = "3347681797"
                        },
                        new
                        {
                            TrabajadorNomina = "861",
                            DireccionId = 12,
                            PlantelId = 2,
                            PlazaId = 1,
                            TrabajadorApMaterno = "CANTÚ",
                            TrabajadorApPaterno = "GÁNDARA",
                            TrabajadorCelular = "3301261506",
                            TrabajadorCurp = "XEXX010101MNEXXXA8",
                            TrabajadorEmail = "eddie.prosacco@will.com",
                            TrabajadorFechaNacimiento = new DateTime(1989, 3, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrabajadorNombre = "LOURDES",
                            TrabajadorRegistro = "368b6a57-1ef7-4359-849a-837b3dc821b1",
                            TrabajadorTelefono = "3344970611"
                        },
                        new
                        {
                            TrabajadorNomina = "675",
                            DireccionId = 13,
                            PlantelId = 2,
                            PlazaId = 1,
                            TrabajadorApMaterno = "GONZÁLEZ",
                            TrabajadorApPaterno = "LOZANO",
                            TrabajadorCelular = "3315038946",
                            TrabajadorCurp = "XEXX010101HNEXXXA4",
                            TrabajadorEmail = "purdy.leonora@hudson.com",
                            TrabajadorFechaNacimiento = new DateTime(1979, 3, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrabajadorNombre = "ANTONIO",
                            TrabajadorRegistro = "1a220064-51b5-4637-b362-7aafca42116e",
                            TrabajadorTelefono = "3392928159"
                        },
                        new
                        {
                            TrabajadorNomina = "972",
                            DireccionId = 14,
                            PlantelId = 3,
                            PlazaId = 1,
                            TrabajadorApMaterno = "DURÁN",
                            TrabajadorApPaterno = "GARCÍA",
                            TrabajadorCelular = "3317914443",
                            TrabajadorCurp = "XEXX010101MNEXXXA8",
                            TrabajadorEmail = "frami.terence@dubuque.com",
                            TrabajadorFechaNacimiento = new DateTime(1977, 3, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrabajadorNombre = "CLARA GABRIELA",
                            TrabajadorRegistro = "726f764d-64d2-4f6e-a627-b32f33efa309",
                            TrabajadorTelefono = "3339752838"
                        },
                        new
                        {
                            TrabajadorNomina = "779",
                            DireccionId = 15,
                            PlantelId = 3,
                            PlazaId = 1,
                            TrabajadorApMaterno = "CAMPA",
                            TrabajadorApPaterno = "PAMPLONA",
                            TrabajadorCelular = "3326431305",
                            TrabajadorCurp = "XEXX010101HNEXXXA4",
                            TrabajadorEmail = "bradtke.torrey@yahoo.com",
                            TrabajadorFechaNacimiento = new DateTime(1978, 3, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrabajadorNombre = "JORGE",
                            TrabajadorRegistro = "cefea567-f4dd-476b-9365-9290e23b923e",
                            TrabajadorTelefono = "3320068241"
                        },
                        new
                        {
                            TrabajadorNomina = "656",
                            DireccionId = 16,
                            PlantelId = 3,
                            PlazaId = 1,
                            TrabajadorApMaterno = "TORRES",
                            TrabajadorApPaterno = "IBAÑEZ",
                            TrabajadorCelular = "3330028955",
                            TrabajadorCurp = "XEXX010101MNEXXXA8",
                            TrabajadorEmail = "thora.hirthe@gmail.com",
                            TrabajadorFechaNacimiento = new DateTime(1982, 3, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrabajadorNombre = "SONIA ERIKA",
                            TrabajadorRegistro = "2efcb7b8-b974-4a38-a35d-3e9e6446405d",
                            TrabajadorTelefono = "3307889594"
                        },
                        new
                        {
                            TrabajadorNomina = "991",
                            DireccionId = 17,
                            PlantelId = 3,
                            PlazaId = 1,
                            TrabajadorApMaterno = "TORRES",
                            TrabajadorApPaterno = "ALCARAZ",
                            TrabajadorCelular = "3361607678",
                            TrabajadorCurp = "XEXX010101MNEXXXA8",
                            TrabajadorEmail = "vicenta72@gmail.com",
                            TrabajadorFechaNacimiento = new DateTime(1980, 3, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrabajadorNombre = "ALEJANDRA",
                            TrabajadorRegistro = "97acf795-294e-497a-9c3e-d0e1b4c75922",
                            TrabajadorTelefono = "3379836327"
                        },
                        new
                        {
                            TrabajadorNomina = "669",
                            DireccionId = 18,
                            PlantelId = 3,
                            PlazaId = 1,
                            TrabajadorApMaterno = "CARGÍA",
                            TrabajadorApPaterno = "CORNEJO",
                            TrabajadorCelular = "3345559416",
                            TrabajadorCurp = "XEXX010101MNEXXXA8",
                            TrabajadorEmail = "xgoodwin@schinner.com",
                            TrabajadorFechaNacimiento = new DateTime(1970, 3, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrabajadorNombre = "MARTHA",
                            TrabajadorRegistro = "f9c3eb8a-b302-4c86-acf3-91c7afcbff03",
                            TrabajadorTelefono = "3330112050"
                        },
                        new
                        {
                            TrabajadorNomina = "500",
                            DireccionId = 19,
                            PlantelId = 3,
                            PlazaId = 1,
                            TrabajadorApMaterno = "DELGADO",
                            TrabajadorApPaterno = "BECERRA",
                            TrabajadorCelular = "3370661957",
                            TrabajadorCurp = "XEXX010101HNEXXXA4",
                            TrabajadorEmail = "nelson45@yahoo.com",
                            TrabajadorFechaNacimiento = new DateTime(1996, 3, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrabajadorNombre = "SERGIO",
                            TrabajadorRegistro = "e1bcb6a4-9fec-49bb-ae31-b74b193b8ca2",
                            TrabajadorTelefono = "3348810059"
                        });
                });

            modelBuilder.Entity("Entities.UsuarioEntity", b =>
                {
                    b.Property<string>("UsuarioId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TrabajadorId")
                        .IsRequired()
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("UsuarioAcceso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UsuarioId");

                    b.HasIndex("TrabajadorId");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            UsuarioId = "56a8087d-e8e7-4fab-b1a4-e4411230b714",
                            TrabajadorId = "836",
                            UsuarioAcceso = "ayhoRaUL22sbbmJX3ZFdPH+cnLPrUC6qAbUIi2zw0GA="
                        },
                        new
                        {
                            UsuarioId = "34025c33-2aed-4e40-94c8-ec90aad97d32",
                            TrabajadorId = "520",
                            UsuarioAcceso = "ayhoRaUL22sbbmJX3ZFdPH+cnLPrUC6qAbUIi2zw0GA="
                        },
                        new
                        {
                            UsuarioId = "95cf45e4-9566-4a90-8c81-c98434ed80fd",
                            TrabajadorId = "969",
                            UsuarioAcceso = "ayhoRaUL22sbbmJX3ZFdPH+cnLPrUC6qAbUIi2zw0GA="
                        },
                        new
                        {
                            UsuarioId = "a04daf8c-d5ab-4cab-a66c-d17afd7c4033",
                            TrabajadorId = "662",
                            UsuarioAcceso = "ayhoRaUL22sbbmJX3ZFdPH+cnLPrUC6qAbUIi2zw0GA="
                        },
                        new
                        {
                            UsuarioId = "d7c918f2-fe72-45e2-aa78-2ae2a0891242",
                            TrabajadorId = "870",
                            UsuarioAcceso = "ayhoRaUL22sbbmJX3ZFdPH+cnLPrUC6qAbUIi2zw0GA="
                        },
                        new
                        {
                            UsuarioId = "e86571bb-97d2-4b5d-b4fe-0143febe2654",
                            TrabajadorId = "142",
                            UsuarioAcceso = "ayhoRaUL22sbbmJX3ZFdPH+cnLPrUC6qAbUIi2zw0GA="
                        },
                        new
                        {
                            UsuarioId = "4201ab89-5003-4c1f-ab0d-b666f1bb62b3",
                            TrabajadorId = "106",
                            UsuarioAcceso = "ayhoRaUL22sbbmJX3ZFdPH+cnLPrUC6qAbUIi2zw0GA="
                        },
                        new
                        {
                            UsuarioId = "0c75e87c-5d4a-49b2-b33c-8aad08b66e91",
                            TrabajadorId = "728",
                            UsuarioAcceso = "ayhoRaUL22sbbmJX3ZFdPH+cnLPrUC6qAbUIi2zw0GA="
                        },
                        new
                        {
                            UsuarioId = "15c866bb-b516-418c-b7ab-0b5e7c117ed9",
                            TrabajadorId = "861",
                            UsuarioAcceso = "ayhoRaUL22sbbmJX3ZFdPH+cnLPrUC6qAbUIi2zw0GA="
                        },
                        new
                        {
                            UsuarioId = "2c8e6126-b243-4626-a40e-eee543a01def",
                            TrabajadorId = "675",
                            UsuarioAcceso = "ayhoRaUL22sbbmJX3ZFdPH+cnLPrUC6qAbUIi2zw0GA="
                        },
                        new
                        {
                            UsuarioId = "509bc163-0035-4ce4-8156-1bdcacb22c59",
                            TrabajadorId = "972",
                            UsuarioAcceso = "ayhoRaUL22sbbmJX3ZFdPH+cnLPrUC6qAbUIi2zw0GA="
                        },
                        new
                        {
                            UsuarioId = "7fd00e30-b287-4faa-9f77-fbe89ef6df91",
                            TrabajadorId = "779",
                            UsuarioAcceso = "ayhoRaUL22sbbmJX3ZFdPH+cnLPrUC6qAbUIi2zw0GA="
                        },
                        new
                        {
                            UsuarioId = "5bf8fa81-010c-46ef-a0f1-58734e8ff60b",
                            TrabajadorId = "656",
                            UsuarioAcceso = "ayhoRaUL22sbbmJX3ZFdPH+cnLPrUC6qAbUIi2zw0GA="
                        },
                        new
                        {
                            UsuarioId = "7d79a7d4-2a5d-4af7-b480-d63d571b9af3",
                            TrabajadorId = "991",
                            UsuarioAcceso = "ayhoRaUL22sbbmJX3ZFdPH+cnLPrUC6qAbUIi2zw0GA="
                        },
                        new
                        {
                            UsuarioId = "139198bc-24b7-4faa-ad5f-90f56a73c8ba",
                            TrabajadorId = "669",
                            UsuarioAcceso = "ayhoRaUL22sbbmJX3ZFdPH+cnLPrUC6qAbUIi2zw0GA="
                        },
                        new
                        {
                            UsuarioId = "019a98a0-8243-4bbf-b4db-4dfd0d9216ab",
                            TrabajadorId = "500",
                            UsuarioAcceso = "ayhoRaUL22sbbmJX3ZFdPH+cnLPrUC6qAbUIi2zw0GA="
                        });
                });

            modelBuilder.Entity("Entities.JefeEntity", b =>
                {
                    b.HasOne("Entities.AcademiaEntity", "Academia")
                        .WithMany("Jefes")
                        .HasForeignKey("AcademiaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.TrabajadorEntity", "Trabajador")
                        .WithMany()
                        .HasForeignKey("TrabajadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Academia");

                    b.Navigation("Trabajador");
                });

            modelBuilder.Entity("Entities.PermisoEntity", b =>
                {
                    b.HasOne("Entities.JefeEntity", "JefeInmediato")
                        .WithMany()
                        .HasForeignKey("JefeInmediatoId");

                    b.HasOne("Entities.TrabajadorEntity", "Trabajador")
                        .WithMany()
                        .HasForeignKey("TrabajadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JefeInmediato");

                    b.Navigation("Trabajador");
                });

            modelBuilder.Entity("Entities.PlantelEntity", b =>
                {
                    b.HasOne("Entities.DireccionEntity", "Direccion")
                        .WithMany()
                        .HasForeignKey("DireccionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Direccion");
                });

            modelBuilder.Entity("Entities.PuestoEntity", b =>
                {
                    b.HasOne("Entities.AcademiaEntity", "Academia")
                        .WithMany()
                        .HasForeignKey("AcademiaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.TrabajadorEntity", "Trabajador")
                        .WithMany()
                        .HasForeignKey("TrabajadorId");

                    b.Navigation("Academia");

                    b.Navigation("Trabajador");
                });

            modelBuilder.Entity("Entities.TrabajadorEntity", b =>
                {
                    b.HasOne("Entities.DireccionEntity", "Direccion")
                        .WithMany()
                        .HasForeignKey("DireccionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.PlantelEntity", "Plantel")
                        .WithMany("Trabajadores")
                        .HasForeignKey("PlantelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.PlazaEntity", "Plaza")
                        .WithMany("Trabajadores")
                        .HasForeignKey("PlazaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Direccion");

                    b.Navigation("Plantel");

                    b.Navigation("Plaza");
                });

            modelBuilder.Entity("Entities.UsuarioEntity", b =>
                {
                    b.HasOne("Entities.TrabajadorEntity", "Trabajador")
                        .WithMany()
                        .HasForeignKey("TrabajadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trabajador");
                });

            modelBuilder.Entity("Entities.AcademiaEntity", b =>
                {
                    b.Navigation("Jefes");
                });

            modelBuilder.Entity("Entities.PlantelEntity", b =>
                {
                    b.Navigation("Trabajadores");
                });

            modelBuilder.Entity("Entities.PlazaEntity", b =>
                {
                    b.Navigation("Trabajadores");
                });
#pragma warning restore 612, 618
        }
    }
}
