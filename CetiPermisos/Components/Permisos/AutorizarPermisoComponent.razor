@using Entities
@using Business
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage

@inject NavigationManager NavManager
@inject ProtectedLocalStorage LocalStorage


<div class="form-container" style="max-width: 500px; margin: 0 auto; display: block;">
    <EditForm Model="oPermiso">
        <div class="form-group">
            <label>Tipo de permiso</label>
            <InputSelect @bind-Value="oPermiso.PermisoTipo" class="form-control" disabled>
                <option>Selecciona una opcion</option>
                <option value="2 horas">2 horas</option>
                <option value="Economico">Economico</option>
                <option value="Cumpleanios">Cumplea&ntilde;os</option>
            </InputSelect>
        </div>
        <div class="form-group">
            <label>Fecha de elaboraci&oacute;n</label>
            <InputDate type="date" @bind-Value="oPermiso.PermisoFechaElaboracion" class="form-control" disabled />
        </div>
        <div class="form-group">
            <label>Fecha de aplicaci&oacute;n</label>
            <InputDate type="date" @bind-Value="oPermiso.PermisoFechaAplicacion" class="form-control" disabled />
        </div>
        @if (oPermiso.PermisoTipo == "2 horas")
        {
            <div class="form-group">
                <label>Hora de aplicaci&oacute;n</label>
                <input type="text" value="@applicationTime" class="form-control" disabled />
            </div>
        }
        <div class="form-group">
            <label>Fecha de finalizaci&oacute;n</label>
            <InputDate type="date" @bind-Value="oPermiso.PermisoFechaFinalizacion" class="form-control" disabled />
        </div>
        @if (oPermiso.PermisoTipo == "2 horas")
        {
            <div class="form-group">
                <label>Hora de finalizaci&oacute;n</label>
                <input type="text" value="@finalizationTime" class="form-control" disabled />
            </div>
        }
        <div class="form-group">
            <label>Motivo</label>
            <InputTextArea @bind-Value="oPermiso.PermisoMotivo" class="form-control" disabled></InputTextArea>
        </div>
        @if (puedeEditar)
        {
            <input class="btn btn-primary" value="Aceptar permiso" @onclick="AceptarPermiso" />
            <input class="btn btn-danger" value="Rechazar permiso" @onclick="RechazarPermiso" />
        }
        else
        {
            <input disabled class="btn btn-primary" value="Aceptar permiso" />
            <input disabled class="btn btn-danger" value="Rechazar permiso" />
        }

    </EditForm>
</div>

@code {
    [Parameter]
    public string PermisoId { get; set; }
    private bool puedeEditar = true;
    public string applicationTime = "";
    public string finalizationTime = "";
    PermisoEntity oPermiso = new PermisoEntity();
    JefeEntity jefe = new JefeEntity();

    protected override async Task OnInitializedAsync()
    {
        var result = await LocalStorage.GetAsync<string>("nomina");
        if (!result.Success)
        {
            NavManager.NavigateTo("iniciar-session");
            return;
        }
        bool esJefe = B_Jefe.EsJefe(result.Value.ToString());
        if (esJefe)
        {
            jefe = B_Jefe.JefePorNomina(result.Value.ToString());
            oPermiso = B_Permiso.PermisoPorId(Convert.ToInt32(PermisoId));
            oPermiso.JefeInmediatoId = jefe.JefeId;
            ValidarEstadoPermiso(oPermiso);
            if (oPermiso.PermisoTipo == "2 horas")
            {
                applicationTime = Convert.ToDateTime(oPermiso.PermisoFechaAplicacion).ToString("HH:mm:ss");
                finalizationTime = Convert.ToDateTime(oPermiso.PermisoFechaFinalizacion).ToString("HH:mm:ss");

            }
        }

    }

    private void AceptarPermiso()
    {
        oPermiso.PermisoEstado = "ACEPTADO";
        B_Permiso.ActualizarPermiso(oPermiso);
        NavManager.NavigateTo("permisos/lista");
    }

    private void RechazarPermiso()
    {
        oPermiso.PermisoEstado = "RECHAZADO";
        B_Permiso.ActualizarPermiso(oPermiso);
        NavManager.NavigateTo("permisos/lista");
    }

    private void ValidarEstadoPermiso(PermisoEntity permiso)
    {
        if (permiso.PermisoEstado != "PENDIENTE") puedeEditar = false;
    }
}
